<?php if(!defined('BASEPATH')) exit('No direct script access allowed');

require APPPATH . '/libraries/BaseController.php';

/**
 * Class : Despatch (DespatchController)
 * Despatch Class to control task related operations.
 * @author : Ashish
 * @version : 1.0
 * @since : 08 Jun 2023
  */
class Despatch extends BaseController
{
    /**
     * This is default constructor of the class
     */
    public function __construct()
    {
        parent::__construct();
        $this->load->model('Despatch_model', 'dm');
        $this->load->model('Branches_model', 'bm');
        $this->isLoggedIn();
        $this->module = 'Despatch';
        $this->load->library("pagination");
    }

    /**
     * This is default routing method
     * It routes to default listing page
     */
    public function index()
    {
        redirect('despatch/despatchListing');
    }
    
    /**
     * This function is used to load the task list
     */
  /*  function despatchListing()
    {
        if(!$this->hasListAccess())
        {
            $this->loadThis();
        }
        else
        {        
            $searchText = '';
            if(!empty($this->input->post('searchText'))) {
                $searchText = $this->security->xss_clean($this->input->post('searchText'));
            }
            $data['searchText'] = $searchText;
            
            $this->load->library('pagination');
            
            $count = $this->dm->despatchListingCount($searchText);

			$returns = $this->paginationCompress ( "despatchListing/", $count, 500 );
            
            $data['records'] = $this->dm->despatchListing($searchText, $returns["page"], $returns["segment"]);
            
            $this->global['pageTitle'] = 'CodeInsect : Despatch';
            
            $this->loadViews("despatch/list", $this->global, $data, NULL);
        }
    }*/
/*public function despatchListing() {
    // Get the logged-in user's ID from the session
    $userId = $this->session->userdata('userId');
   $userRole = $this->session->userdata('role');
    $fromDate = $this->input->post('fromDate');
      $toDate = $this->input->post('toDate');
   
   

    if ($userRole == '1' || $userRole == '14') {
         $data['records'] = $this->dm->getAllDespatchRecordsDate($fromDate, $toDate);
    } else {
        $franchiseNumber = $this->dm->getFranchiseNumberByUserId($userId);

        if ($franchiseNumber) {
             $data['records'] = $this->dm->getDespatchRecordsByFranchiseAndDate($franchiseNumber, $fromDate, $toDate);
        } else {
            $data['records'] = []; // Handle the case where franchise number is not found
        }
    }
    $this->loadViews("despatch/list", $this->global, $data, NULL);
}*/

public function despatchListing() {
    $userId = $this->session->userdata('userId');
    $userRole = $this->session->userdata('role');

    $franchiseFilter = $this->input->get('franchiseNumber');
    if ($this->input->get('resetFilter') == '1') {
        $franchiseFilter = '';
    }
	$config = array();
    $config["base_url"] = base_url() . "despatch/despatchListing";
    $config["per_page"] = 10;  
    $config["uri_segment"] = 3; 

    $page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;  

    if ($userRole == '14' || $userRole == '1' || $userRole == '15' || $userRole == '16' || $userRole == '23') {
        $config["total_rows"] = $this->dm->get_count($franchiseFilter); 
    } else {
        $franchiseNumber = $this->dm->getFranchiseNumberByUserId($userId); 
        if ($franchiseNumber) {
            $config["total_rows"] = $this->dm->get_count_by_franchise($franchiseNumber, $franchiseFilter); 
        } else {
            $config["total_rows"] = 0; // No records found
        }
    }
	
	if ($userRole == '23' || $userRole == '1' || $userRole == '14'  || $userRole == '16' || $userRole == '15'||  $userRole == '13') {
        $data["records"] = $this->dm->get_data($config["per_page"], $page, $franchiseFilter);
		//print_r($data["records"]);exit;
    } else {
        if ($franchiseNumber) {
            $data["records"] = $this->dm->get_data_by_franchise($franchiseNumber, $config["per_page"], $page, $franchiseFilter);
        } else {
            $data["records"] = [];
        }
    }
	
	$data["serial_no"] = $page + 1;
	$this->pagination->initialize($config);
	$data["links"] = $this->pagination->create_links();
    $data["start"] = $page + 1;  // Starting record number
    $data["end"] = min($page + $config["per_page"], $config["total_rows"]); // Ending record number
    $data["total_records"] = $config["total_rows"];  // Total number of records
	$data["franchiseFilter"] = $franchiseFilter;
    $data['branchDetail'] = $this->bm->getBranchesFranchiseNumber();
	$this->loadViews("despatch/list", $this->global, $data, NULL);
}

 function add()
    {
        if(!$this->hasCreateAccess())
        {
            $this->loadThis();
        }
        else
        {
            //$data['users'] = $this->tm->getUser();
            $this->global['pageTitle'] = 'CodeInsect : Add New Campaign';
            $data['branchDetail'] = $this->bm->getBranchesFranchiseNumber();
        //    $data['users'] = $this->cf->getGrowthuser();
            $this->loadViews("despatch/add", $this->global, $data, NULL);
        }
    }


    /**
     * This function is used to add new user to the system
     */
    function addNewDespatch()
    {
        if(!$this->hasCreateAccess())
        {
            $this->loadThis();
        }
        else
        {
            $this->load->library('form_validation');
            
            $this->form_validation->set_rules('orderNumber','Despatch Order Number','trim|required|max_length[256]');
            //$this->form_validation->set_rules('AcDescription','Description','trim|required|max_length[1024]');
            
            if($this->form_validation->run() == FALSE)
            {
                $this->add();
            }
            else
            {
                $despatchTitle = $this->security->xss_clean($this->input->post('despatchTitle'));
                //$franchiseNumber = $this->security->xss_clean($this->input->post('franchiseNumber'));
                $franchiseNumberArray = $this->security->xss_clean($this->input->post('franchiseNumber'));
                $AcInvoiceTitle = $this->security->xss_clean($this->input->post('AcInvoiceTitle'));
                $AcInvoiceAmount = $this->security->xss_clean($this->input->post('AcInvoiceAmount'));
                $AcDescription = $this->security->xss_clean($this->input->post('AcDescription'));
                $AcInvoicenumDesp = $this->security->xss_clean($this->input->post('AcInvoicenumDesp'));
                $orderNumber = $this->security->xss_clean($this->input->post('orderNumber'));
                $dateoford = $this->security->xss_clean($this->input->post('dateoford'));
                $dateofdespatch = $this->security->xss_clean($this->input->post('dateofdespatch'));
                $modeOforder = $this->security->xss_clean($this->input->post('modeOforder'));
                $transportCourior = $this->security->xss_clean($this->input->post('transportCourior'));
                $emailconfirmDispatchPOD = $this->security->xss_clean($this->input->post('emailconfirmDispatchPOD'));
                $podNumber = $this->security->xss_clean($this->input->post('podNumber'));
                $delStatus = $this->security->xss_clean($this->input->post('delStatus'));
                $delDate = $this->security->xss_clean($this->input->post('delDate'));
                $description = $this->security->xss_clean($this->input->post('description'));
                $franchiseNumbers = implode(',',$franchiseNumberArray);
                
                                
                $despatchInfo = array('despatchTitle'=>$despatchTitle, 'AcInvoiceTitle'=>$AcInvoiceTitle, 'AcInvoiceAmount'=>$AcInvoiceAmount, 'AcDescription'=>$AcDescription, 'franchiseNumber'=>$franchiseNumbers, 'AcInvoicenumDesp'=>$AcInvoicenumDesp, 'orderNumber'=>$orderNumber, 'dateoford'=>$dateoford, 'dateofdespatch'=>$dateofdespatch, 'modeOforder'=>$modeOforder, 'transportCourior'=>$transportCourior, 'emailconfirmDispatchPOD'=>$emailconfirmDispatchPOD, 'podNumber'=>$podNumber, 'delStatus'=>$delStatus, 'delDate'=>$delDate, 'acattachmentVRLS3File'=>$s3files1, 'description'=>$description, 'createdBy'=>$this->vendorId, 'createdDtm'=>date('Y-m-d H:i:s'));
                
                $result = $this->dm->addNewDespatch($despatchInfo);
                if($result > 0) {
                    if(!empty($franchiseNumberArray)){
                        foreach ($franchiseNumberArray as $franchiseNumber){
                        $branchDetail = $this->bm->getBranchesInfoByfranchiseNumber($franchiseNumber);
                            if(!empty($branchDetail)){
                                //$to = $branchDetail->branchEmail;
                                $to = $branchDetail->officialEmailID;
                                $subject = "Alert - eduMETA THE i-SCHOOL Assign New Despatch";
                                $message = 'Dear '.$branchDetail->applicantName.' ';
                                //$message = ' '.$description.' ';
                                $message .= 'You have been assigned a new Despatch. BY- '.$this->session->userdata("name").' ';
                                $message .= 'Please visit the portal.';
                                //$message = ' '.$description.' ';
                                $headers = "From: Edumeta  Team<noreply@theischool.com>" . "\r\n" . "BCC: dev.edumeta@gmail.com";
                                mail($to,$subject,$message,$headers);
                            }
                        }
                    }
                    $this->session->set_flashdata('success', 'New Despatch created successfully');
                } else {
                    $this->session->set_flashdata('error', 'Despatch creation failed');
                }
                
                redirect('despatch/despatchListing');
            }
        }
    }

    
    /**
     * This function is used load task edit information
     * @param number $taskId : Optional : This is task id
     */
    function edit($despatchId = NULL)
    {
        if(!$this->hasUpdateAccess())
        {
            $this->loadThis();
        }
        else
        {
            if($despatchId == null)
            {
                redirect('despatch/despatchListing');
            }
            $data['despatchInfo'] = $this->dm->getDespatchInfo($despatchId);
            $data['branchDetail'] = $this->bm->getBranchesFranchiseNumber();
            $data['users'] = $this->dm->getUser();
            $this->global['pageTitle'] = 'CodeInsect : Edit Despatch';            
            $this->loadViews("despatch/edit", $this->global, $data, NULL);
        }
    }
    /**
     * This function is used to view the user information
     */
      function view($despatchId = NULL)
    {
        if(!$this->hasUpdateAccess())
        {
            $this->loadThis();
        }
        else
        {
            if($despatchId == null)
            {
                redirect('despatch/despatchListing');
            }
            $data['despatchInfo'] = $this->dm->getDespatchInfo($despatchId);
            $data['branchDetail'] = $this->bm->getBranchesFranchiseNumber();
            $data['users'] = $this->dm->getUser();
            $this->global['pageTitle'] = 'CodeInsect : View Despatch';            
            $this->loadViews("despatch/view", $this->global, $data, NULL);
        }
    }
    
    /**
     * This function is used to edit the user information
     */
    function editDespatch()
    {
        if(!$this->hasUpdateAccess())
        {
            $this->loadThis();
        }
        else
        {
            $this->load->library('form_validation');
            
            $despatchId = $this->input->post('despatchId');
            
            $this->form_validation->set_rules('AcInvoicenumDesp','Despatch Invoice Number','trim|required|max_length[256]');
            /*$this->form_validation->set_rules('description','Description','trim|required|max_length[1024]');*/
            
            if($this->form_validation->run() == FALSE)
            {
                $this->edit($despatchId);
            }
            else
            {
                $despatchTitle = $this->security->xss_clean($this->input->post('despatchTitle'));
                //$franchiseNumber = $this->security->xss_clean($this->input->post('franchiseNumber'));
                $AcInvoicenumDesp = $this->security->xss_clean($this->input->post('AcInvoicenumDesp'));
                $orderNumber = $this->security->xss_clean($this->input->post('orderNumber'));
                $dateoford = $this->security->xss_clean($this->input->post('dateoford'));
                $dateofdespatch = $this->security->xss_clean($this->input->post('dateofdespatch'));
                $modeOforder = $this->security->xss_clean($this->input->post('modeOforder'));
                $transportCourior = $this->security->xss_clean($this->input->post('transportCourior'));
                $emailconfirmDispatchPOD = $this->security->xss_clean($this->input->post('emailconfirmDispatchPOD'));
                $podNumber = $this->security->xss_clean($this->input->post('podNumber'));
                $delStatus = $this->security->xss_clean($this->input->post('delStatus'));
                $delDate = $this->security->xss_clean($this->input->post('delDate'));
                $description = $this->security->xss_clean($this->input->post('description'));
                /*VRL-Attach*/
                $dir = dirname($_FILES["file"]["tmp_name"]);
                                $destination = $dir . DIRECTORY_SEPARATOR . time().'-'.$_FILES["file"]["name"];
                                rename($_FILES["file"]["tmp_name"], $destination);
                                $storeFolder = 'attachements';

                                $s3Result = $this->s3_upload->upload_file($destination,$storeFolder);
                                $result_arr = $s3Result->toArray();
                                if(!empty($result_arr['ObjectURL'])) {
                                      $s3_file_link[] = $result_arr['ObjectURL'];
                                } else {
                                    $s3_file_link[] = '';
                                }    
                                
                            //}
                                $s3files = implode(',', $s3_file_link);
                   
				// $s3_file_link1 = [];
				if (isset($_FILES["vrlfile"]) && !empty($_FILES["vrlfile"]["tmp_name"])) {
					$dir1 = dirname($_FILES["vrlfile"]["tmp_name"]);
					$destination1 = $dir1 . DIRECTORY_SEPARATOR . time() . '-' . $_FILES["vrlfile"]["name"];
					if (rename($_FILES["vrlfile"]["tmp_name"], $destination1)) {
						$storeFolder1 = 'attachements';
						$s3Result1 = $this->s3_upload->upload_file($destination1, $storeFolder1);
						$result_arr1 = $s3Result1->toArray();
					if (!empty($result_arr1['ObjectURL'])) {
							$s3_file_link1[] = $result_arr1['ObjectURL'];
						} else {
							$s3_file_link1[] = ''; 
						}
					} else {
						
					}
				}
				$s3files1 = implode(',', $s3_file_link1);

                $despatchInfo = array('despatchTitle'=>$despatchTitle, 'AcInvoicenumDesp'=>$AcInvoicenumDesp, 'orderNumber'=>$orderNumber, 'dateoford'=>$dateoford, 'dateofdespatch'=>$dateofdespatch, 'modeOforder'=>$modeOforder, 'transportCourior'=>$transportCourior, 'emailconfirmDispatchPOD'=>$emailconfirmDispatchPOD, 'podNumber'=>$podNumber, 'delStatus'=>$delStatus, 'delDate'=>$delDate, 'acattachmentVRLS3File'=>$s3files1, 'acattachmentInvoiceS3File'=>$s3files, 'description'=>$description, 'updatedBy'=>$this->vendorId, 'updatedDtm'=>date('Y-m-d H:i:s'));
                
                $result = $this->dm->editDespatch($despatchInfo, $despatchId);
                
                if($result == true)
                {
                    $this->session->set_flashdata('success', 'Despatch updated successfully');
                }
                else
                {
                    $this->session->set_flashdata('error', 'Despatch updation failed');
                }
                
                redirect('despatch/despatchListing');
            }
        }
    }
}

?>